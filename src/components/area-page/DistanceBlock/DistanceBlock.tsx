import React from 'react';
import './DistanceBlock.scss';

export type DistanceStructureType = { time: string; city: string };
interface DistanceBlockProps {
  timeFrom: { plane: DistanceStructureType[]; car: DistanceStructureType[] };
}

const DistanceBlock = ({ timeFrom }: DistanceBlockProps) => {
  return (
    <div className="area__distance">
      <h2 className="title">How long it takes from</h2>
      <div className="content">
        <DistanceList type="plane" data={timeFrom.plane} />
        <DistanceList type="car" data={timeFrom.car} />
      </div>
    </div>
  );
};

export default DistanceBlock;

const DistanceList = ({ data, type }: { data: DistanceStructureType[]; type: 'car' | 'plane' }) => {
  return (
    <ul className="distance-list">
      {data.map((item, index) => (
        <li key={index} className="list-item">
          <div className="time">
            {type === 'plane' ? planeImage : carImage}
            {item.time}
            {'h'}
          </div>
          <div className="city">{item.city}</div>
        </li>
      ))}
    </ul>
  );
};
const planeImage = (
  <svg width="22" height="21" viewBox="0 0 22 21" fill="none" xmlns="http://www.w3.org/2000/svg">
    <mask id="mask0_1_104" maskUnits="userSpaceOnUse" x="0" y="0" width="22" height="21">
      <path d="M21.08 0H0.0799561V21H21.08V0Z" fill="white" />
    </mask>
    <g mask="url(#mask0_1_104)">
      <path
        d="M19.2408 1.35091C19.4547 1.35091 19.605 1.39094 19.6837 1.42112C19.7776 1.67181 19.9042 2.57022 18.9757 3.49947L14.2388 8.23628L14.273 8.82428C14.3452 10.0541 14.4784 12.2578 14.5932 14.1471C14.6943 15.8291 14.7907 17.4172 14.7973 17.5524C14.8006 17.6456 14.8019 17.6672 14.7153 17.7716C14.5217 18.0065 14.1601 18.4055 13.8562 18.7363C13.3837 17.4638 12.3915 14.7771 11.8435 13.273L11.1394 11.3377L9.68245 12.7946L7.00364 15.3697L6.63024 15.7418L6.61842 16.2681C6.60923 16.6881 6.6112 17.4428 6.61252 18.1076C6.61383 18.5709 6.61514 18.9922 6.61186 19.2239C6.60595 19.235 6.70111 19.2475 6.69258 19.2626C6.63548 19.1707 6.5738 19.0723 6.50883 18.9692C5.96873 18.1076 5.22127 16.9165 4.99355 16.5444L4.82686 16.2721L4.5532 16.1067C3.55833 15.5056 2.45583 14.8119 1.78317 14.3781C1.80614 14.365 1.82517 14.4359 1.84092 14.4273H1.88489C2.09686 14.4273 2.44664 14.4319 2.83842 14.4372C3.35161 14.4444 3.93305 14.4523 4.37799 14.4523C4.54861 14.4523 4.7002 14.451 4.82227 14.4483L5.34923 14.4365L5.72198 14.0644L8.30039 11.4047L9.75202 9.95369L7.82592 9.24494C6.37823 8.71206 3.60558 7.67716 2.30817 7.18956C2.64089 6.88309 3.04186 6.51953 3.27549 6.32528C3.34045 6.27147 3.39164 6.24391 3.42708 6.24391L3.47367 6.24522C3.6187 6.25244 5.41552 6.36925 7.15261 6.48344C8.99667 6.60419 11.0783 6.73937 12.2622 6.81484L12.8535 6.85159L17.5916 2.11347C18.2571 1.44869 18.9107 1.34959 19.2414 1.34959L19.2408 1.35091ZM19.2408 0.0390625C18.4657 0.0390625 17.5135 0.337 16.6637 1.1875L12.3449 5.50628C9.91214 5.35206 3.6817 4.94059 3.52683 4.936C3.49927 4.93469 3.46514 4.93337 3.42708 4.93337C3.21642 4.93337 2.85352 4.97341 2.44008 5.31531C1.95445 5.71628 0.943169 6.6685 0.943169 6.6685C0.699044 6.91328 0.575669 7.21647 0.6052 7.50194C0.622919 7.67387 0.716762 7.98822 1.13939 8.15359C1.39664 8.254 5.48508 9.78437 7.37311 10.4787L4.7947 13.1385C4.68052 13.1411 4.53877 13.1424 4.3793 13.1424C3.59311 13.1424 2.37445 13.1168 1.88555 13.1168C1.82058 13.1168 1.76874 13.1168 1.73199 13.1181C1.58302 13.1227 1.27524 13.0492 0.46345 13.7278L0.4057 13.7816C0.162231 14.0251 0.105137 14.2679 0.0998874 14.4287C0.0946374 14.594 0.138606 14.8322 0.378137 15.0239C0.521856 15.14 2.36395 16.3193 3.8753 17.2322C4.23755 17.8234 5.90442 20.4727 5.9917 20.6164C6.11902 20.831 6.32639 20.9537 6.57511 20.961H6.59545C6.83695 20.961 7.08502 20.8409 7.32783 20.6053C8.01492 19.802 7.91977 19.4693 7.92305 19.3289C7.9342 18.8905 7.91583 17.0333 7.93092 16.297L10.6091 13.7212C11.2936 15.6014 12.7898 19.6478 12.8902 19.9057C13.0569 20.329 13.3713 20.4215 13.5432 20.4392C13.5714 20.4425 13.6003 20.4438 13.6285 20.4438C13.8877 20.4438 14.1555 20.3218 14.376 20.1026C14.376 20.1026 15.3243 19.0959 15.7272 18.6063C16.1302 18.1168 16.1151 17.6987 16.1072 17.5019C16.1039 17.3654 15.7239 11.1684 15.5828 8.74881L19.9029 4.42872C21.434 2.89703 21.1905 1.05166 20.6222 0.484C20.3708 0.231344 19.8629 0.0410313 19.2421 0.0410313L19.2408 0.0390625Z"
        fill="black"
      />
    </g>
  </svg>
);
const carImage = (
  <svg width="21" height="17" viewBox="0 0 21 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M1.97998 4.5L4.70185 6.7682C4.88156 6.918 5.10809 7 5.34203 7H16.6179C16.8519 7 17.0784 6.918 17.2581 6.7682L19.98 4.5M5.47998 10.5H5.48998M16.48 10.5H16.49M7.14063 1H14.8194C15.5371 1 16.1998 1.38457 16.5558 2.00772L19.453 7.0777C19.7983 7.6821 19.98 8.3661 19.98 9.0623V15C19.98 15.5523 19.5323 16 18.98 16H17.98C17.4277 16 16.98 15.5523 16.98 15V14H4.97998V15C4.97998 15.5523 4.53226 16 3.97998 16H2.97998C2.4277 16 1.97998 15.5523 1.97998 15V9.0623C1.97998 8.3661 2.16164 7.6821 2.50701 7.0777L5.40414 2.00772C5.76022 1.38457 6.42291 1 7.14063 1ZM5.97998 10.5C5.97998 10.7761 5.75612 11 5.47998 11C5.20384 11 4.97998 10.7761 4.97998 10.5C4.97998 10.2239 5.20384 10 5.47998 10C5.75612 10 5.97998 10.2239 5.97998 10.5ZM16.98 10.5C16.98 10.7761 16.7561 11 16.48 11C16.2039 11 15.98 10.7761 15.98 10.5C15.98 10.2239 16.2039 10 16.48 10C16.7561 10 16.98 10.2239 16.98 10.5Z"
      stroke="black"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
);
